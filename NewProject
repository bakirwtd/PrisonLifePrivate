local ReplicatedFirst = game:GetService("ReplicatedFirst")
_G.CheatEnabled = false
wait(0.5)
_G.CheatEnabled = true

local Crosshairs = {
    ["Star"] = "rbxassetid://18921737577",
    ["X"] = "rbxassetid://18908945667"
}

local Defaults = {
    CrossHair = Crosshairs.X,
    Color = Color3.fromRGB(255, 0, 0),
    CrossEnabled = false
}

-- Other Values
local Prefix = "Yay2"
local CurrentCrossHair = Defaults.CrossHair
local LibraryColors = {
    SchemeColor = Color3.fromRGB(54, 81, 125),
    Background = Color3.fromRGB(45, 63, 106),
    Header = Color3.fromRGB(46, 86, 106),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(52, 104, 117)
}

-- Nil Values
local W, A, S, D
local setclipboard = nil
local LockedTarget = nil
local AimCheck1 = nil
local AimCheck2 = nil

-- Bool Values
local NoFog = false
local FullBright = false
local Flying = false
local ShowNames = false
local SpeedEnabled = false
local JumpEnabled = false
local ChamsEnabled = false
local AimEnabled = false
local SmoothAim = false
local Panic = false
local FreeCam = false
local ChamsTeamCheck = false

-- Strings
local LockPart = "Head"
local AimType = "Hold"
local ConfigName = "ZLX22_CFG.JSON"

-- Number Values
local speedval = 16
local jumpval = 20
local namesize = 5
local FlySpeed = 0
local nameoffset = 1
local smoothness = 1
local MaxDistanceOnScreen = 100
local MaxDistance3D = 100
local HlTransparency = 0
local NameTransparency = 0
local ChamsDist = 100
local ColorDiff = 0.4

-- Colors
local ChosenColor = Defaults.Color
local UnivColors = Color3.new(0, 0, 0)
local ChamsType = "Both"

-- Positions
local CurrentCF
local StartPosition

-- Keys
local AimKey = Enum.KeyCode.T

-- UIS
-- instances
local Crosshair = Instance.new("ScreenGui")
local Img = Instance.new("ImageLabel", Crosshair)
local Ratio = Instance.new("UIAspectRatioConstraint", Img)
local Text = Instance.new("TextLabel", Crosshair)
local con
-- properties
Crosshair.Name = "CH"
Crosshair.Parent = game:GetService("CoreGui")
Crosshair.IgnoreGuiInset = true
Img.AnchorPoint = Vector2.new(0.5, 0.5)
Img.BackgroundTransparency = 1
Img.Position = UDim2.new(0.5, 0, 0.5, 0)
Img.Size = UDim2.new(0, 20, 0, 20)
Img.Image = CurrentCrossHair
Img.Visible = Defaults.CrossEnabled
Ratio.AspectRatio = 1
Text.Size = UDim2.fromScale(1, .1)
Text.AnchorPoint = Vector2.new(0, 0.5)
Text.Position = UDim2.new(0.52, 0, 0.5, 0)
Text.BackgroundTransparency = 1
Text.Text = ""
Text.TextSize = 12
Text.TextXAlignment = Enum.TextXAlignment.Left
Text.Visible = false

-- Functions
function SaveConfig()
    local Table = {}
    -- Numbers
    Table.Speed = speedval
    Table.Jump = jumpval
    Table.NameSize = namesize
    Table.FlySpeed = FlySpeed
    Table.NameOff = nameoffset
    Table.Smooth = smoothness
    Table.MaxDist = MaxDistanceOnScreen
    Table.MaxDistance3D = MaxDistance3D
    Table.HlTran = HlTransparency
    Table.NameTran = NameTransparency
    Table.ChamDist = ChamsDist
    -- Bools
    Table.NoFog = NoFog
    Table.FullBright = FullBright
    Table.ShowNames = ShowNames
    Table.ChamsEnabled = ChamsEnabled
    Table.SmoothAim = SmoothAim
    Table.ChamsTeamCheck = ChamsTeamCheck
end

GetUDim2Dist = function(UD1, UD2)
    local deltaXScale = UD1.X.Scale - UD2.X.Scale
    local deltaXOffset = UD1.X.Offset - UD2.X.Offset
    local deltaYScale = UD1.Y.Scale - UD2.Y.Scale
    local deltaYOffset = UD1.Y.Offset - UD2.Y.Offset

    local distance = math.sqrt(deltaXScale ^ 2 + deltaXOffset ^ 2 + deltaYScale ^ 2 + deltaYOffset ^ 2)
    return distance
end
HighLight = function(charmodel)
    if not charmodel:FindFirstChildOfClass("Highlight") then
        local hl = Instance.new("Highlight", charmodel)
        hl.FillColor = UnivColors
        hl.DepthMode = "AlwaysOnTop"

        if ChamsType == "Outline" then
            hl.OutlineColor = UnivColors
            hl.OutlineTransparency = HlTransparency / 10
            hl.FillTransparency = 1
        elseif ChamsType == "Body" then
            hl.FillTransparency = HlTransparency / 10
            hl.OutlineTransparency = 1
        elseif ChamsType == "Both" then
            hl.OutlineColor = Color3.new(UnivColors.R - ColorDiff, UnivColors.G - ColorDiff, UnivColors.B - ColorDiff)
            hl.FillTransparency = HlTransparency / 10
            hl.OutlineTransparency = HlTransparency / 10
        end
        game:GetService("Debris"):AddItem(hl, 0.05)
    end
end
Msg = function(title, text)
    task.spawn(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = 4
        })
    end)
end
ShowName = function(charmodel)
    if charmodel and charmodel.Head then
        if charmodel.Head:FindFirstChildOfClass("BillboardGui") then
            return
        end
        local bg = Instance.new("BillboardGui", charmodel.Head)
        local tb = Instance.new("TextBox", bg)
        bg.AlwaysOnTop = true
        bg.StudsOffset = Vector3.new(0, nameoffset, 0)
        bg.Size = UDim2.fromOffset(100, 50)
        tb.Size = UDim2.fromScale(1, 1)
        tb.BackgroundTransparency = 1
        tb.TextSize = namesize
        tb.TextTransparency = NameTransparency / 10
        tb.ClipsDescendants = false
        tb.TextColor3 = UnivColors
        tb.Text = charmodel.Name .. " [" ..
                      tostring(math.floor((charmodel.Head.Position - workspace.CurrentCamera.CFrame.Position).Magnitude)) ..
                      " S]"
        game:GetService("Debris"):AddItem(bg, 0.05)
    end
end
Teleport = function(Position)
    CurrentCF.CFrame = CFrame.new(Position)
end
AddBind = function(Key, Func)
    c = game:GetService("UserInputService").InputBegan:Connect(function(input, gs)
        if Panic then
            return c:Disconnect()
        end
        if input.KeyCode == Key or input.UserInputType == Key then
            if not gs then
                Func()
            end
        end
    end)
end
AddBindDouble = function(Key, Func)
    local pressed = 0
    local dbtime = 0.3
    c = game:GetService("UserInputService").InputBegan:Connect(function(input, gs)
        if Panic then
            return c:Disconnect()
        end
        if input.KeyCode == Key and not gs then
            pressed = pressed + 1
            if pressed == 2 then
                Func()
                pressed = 0
            end
            task.spawn(function()
                wait(dbtime)
                pressed = 0
            end)
        end
    end)
end
AddBindHold = function(Key, Func, Func2)
    local c = game:GetService("UserInputService").InputBegan:Connect(function(input, gs)
        if Panic then
            return c:Disconnect()
        end
        if input.KeyCode == Key and not gs then
            Func()
        end
    end)
    local c = game:GetService("UserInputService").InputEnded:Connect(function(input)
        if Panic then
            return c:Disconnect()
        end
        if input.KeyCode == Key then
            Func2()
        end
    end)
end
ToggleFlight = function()
    if not FreeCam then
        CurrentCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
        local Fly = Flying
        Fly = not Fly

        if Fly then
            Msg("Note", "You Are Invisible when flying")
            local StartPosition = CurrentCF.Position
            Teleport(Vector3.new(0, 1000, 0))
            wait(.1)
            CurrentCF.Anchored = true
            Teleport(StartPosition)
        else
            Msg("Stopped Flying", "Yes")
            CurrentCF.Anchored = false
        end
        Flying = Fly
    else
        Msg("Error", "You Are Already Fake Flying.")
    end
end
ToggleFlightFake = function()
    if not Flying then
        CurrentCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
        FreeCam = not FreeCam
        if FreeCam then
            StartPosition = CurrentCF.Position
            Msg("Note", "You Are now fake flying")
            CurrentCF.Anchored = true
        else
            Msg("Stopped Flying", "Yes")
            CurrentCF.Anchored = false
            Teleport(StartPosition)
        end
    else
        Msg("Error", "You Are Already Flying.")
    end
end
UpdatePosition = function()
    CurrentCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
    FreeCam = false
    Flying = false
    CurrentCF.Anchored = false
    Msg("Success", "Updated Successfully")
end

-- Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bakirwtd/NexarisLib/refs/heads/main/" ..
                                            Prefix))()
local Window = Library.Create()

local AimTab = Window:Tab("Aimbot")

AimTab:Toggle("Hold To Aim", false, function(state)
    if state then
        AimType = "Hold"
    else
        AimType = "Toggle"
    end
end)
AimTab:TextBox("Aim Key", function(Text)
    local function isValidEnum(enumType, text)
        local success, enumItem = pcall(function()
            return enumType[text]
        end)
        return success and enumItem ~= nil
    end

    if isValidEnum(Enum.KeyCode, Text) then
        AimKey = Enum.KeyCode[Text]
    elseif isValidEnum(Enum.UserInputType, Text) then
        AimKey = Enum.UserInputType[Text]
    else
        warn("No")
    end
end)
AimCheck1 = game:GetService("UserInputService").InputBegan:Connect(function(input, gs)
    if Panic then
        return AimCheck1:Disconnect()
    end
    if (input.KeyCode == AimKey or input.UserInputType == AimKey) and not gs then
        if AimType == "Toggle" then
            AimEnabled = not AimEnabled
        else
            AimEnabled = true
        end
    end
end)
AimCheck2 = game:GetService("UserInputService").InputEnded:Connect(function(input)
    if Panic then
        return AimCheck2:Disconnect()
    end
    if (input.KeyCode == AimKey or input.UserInputType == AimKey) then
        if AimType == "Hold" then
            AimEnabled = false
        end
    end
end)
AimTab:Toggle("Smooth Aimbot", false, function(state)
    SmoothAim = state
end)
AimTab:TextBox("Smoothness", function(Text)
    local num = tonumber(Text) or 1
    smoothness = num / 10
end)
AimTab:TextBox("Field Of View [*100]", function(Text)
    local num = tonumber(Text) or 1
    MaxDistanceOnScreen = num * 100
end)
AimTab:TextBox("Max Distance [Studs]", function(Text)
    local num = tonumber(Text) or 1
    MaxDistance3D = num
end)
AimTab:Toggle("Head Only", false, function(state)
    if state then
        LockPart = "Head"
    else
        LockPart = "Torso"
    end
end)

local VisualsTab = Window:Tab("Visuals")

VisualsTab:Button("Toggle Chams [K]", function()
    ChamsEnabled = not ChamsEnabled
end)

VisualsTab:Toggle("Team Check", false, function(state)
    ChamsTeamCheck = state
end)

VisualsTab:TextBox("Max Distance [Studs]", function(Text)
    local num = tonumber(Text) or 1
    ChamsDist = num
end)

VisualsTab:Label("Names")

VisualsTab:Toggle("Show Names", false, function(state)
    ShowNames = state
end)

VisualsTab:TextBox("Text Size", function(Text)
    local num = tonumber(Text) or 10
    namesize = num
end)

VisualsTab:TextBox("Text Height", function(Text)
    local num = tonumber(Text) or 10
    nameoffset = num
end)

VisualsTab:Label("Interface")

VisualsTab:Toggle("Crosshair", false, function(state)
    Img.Visible = state
end)

--[[local CharTab = Window:Tab("Character")

CharSection:NewToggle("Speed Enabled", "Self Explanatory", false, function(state)
    SpeedEnabled = state
end)
CharSection:NewSlider("Walk Speed", "Self Explanatory", speedval, 100, 16, function(value)
    speedval = value
end)

CharSection:NewLabel("Jump")

CharSection:NewToggle("Jump Enabled", "Self Explanatory", false, function(state)
    JumpEnabled = state
end)
CharSection:NewSlider("Jump Power", "Self Explanatory", jumpval, 100, 20, function(value)
    jumpval = value
end)

CharSection:NewLabel("Flight")

CharSection:NewButton("Invis Fly [2x LeftAlt]", "fly while invisible to others", function()
    ToggleFlight()
end)
CharSection:NewButton("FreeCam [2x LCtrl]", "body stays in place, camera flies", function()
    ToggleFlightFake()
end)
CharSection:NewButton("Update Position [2x Zero]", "click after death with freecam", function()
    UpdatePosition()
end)
CharSection:NewSlider("Fly Speed", "Distance To Travel Per Frame in Flight", FlySpeed, 10, 0, function(value)
    FlySpeed = value
end)

local WorldTab = Window:Tab("World")

WorldSection:NewButton("NoFog Loop Toggle", "Remove Fog", function()
    NoFog = not NoFog
end)
WorldSection:NewButton("FullBright Loop Toggle", "Remove Darkness", function()
    FullBright = not FullBright
end)

local MiscTab = Window:Tab("Misc")

MiscSection:NewButton("Stop Cheat", "In case u get checked", function()
    UpdatePosition()
    SaveConfig()
    Library:Exit()
    _G.CheatEnabled = false
end)

MiscSection:NewButton("Fix Visuals", "Remove Names that are glitched (ChamsEnabled)", function()
    RemoveAllNames()
    RemoveAllHL()
end)
MiscSection:NewButton("Copy Coords", "Self Explanatory", function()
    local root = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
    if setclipboard then
        setclipboard("Vector3.new(" .. tostring(root.Position) .. ")")
    else
        warn("No Copy UNC")
        warn("Vector3.new(" .. tostring(root.Position) .. ")")
    end
end)]]

-- Binds

AddBind(Enum.KeyCode.K, function()
    ChamsEnabled = not ChamsEnabled
end)
AddBindDouble(Enum.KeyCode.LeftControl, function()
    ToggleFlightFake()
end)
AddBindDouble(Enum.KeyCode.LeftAlt, function()
    ToggleFlight()
end)
AddBindDouble(Enum.KeyCode.Zero, function()
    UpdatePosition()
end)
AddBindHold(Enum.KeyCode.W, function()
    W = true
end, function()
    W = false
end)
AddBindHold(Enum.KeyCode.A, function()
    A = true
end, function()
    A = false
end)
AddBindHold(Enum.KeyCode.S, function()
    S = true
end, function()
    S = false
end)
AddBindHold(Enum.KeyCode.D, function()
    D = true
end, function()
    D = false
end)

spawn(function()
    con = game:GetService("RunService").RenderStepped:Connect(function()
        if not _G.CheatEnabled then
            ChamsEnabled = false
            SpeedEnabled = false
            JumpEnabled = false
            ShowNames = false
            Panic = true
            Flying = false
            NoFog = false
            FullBright = false
            Crosshair:Destroy()
            Window:Exit()
            return con:Disconnect()
        end
        if FullBright then
            game:GetService("Lighting").ColorShift_Bottom = Color3.new(.6, .6, .6)
            game:GetService("Lighting").ColorShift_Top = Color3.new(.6, .6, .6)
            game:GetService("Lighting").GlobalShadows = false
            game:GetService("Lighting").Ambient = Color3.new(.6, .6, .6)
            game:GetService("Lighting").OutdoorAmbient = Color3.new(.6, .6, .6)
            game:GetService("Lighting").Brightness = 1.2
            game:GetService("Lighting").ClockTime = 2
        end
        if NoFog then
            game:GetService("Lighting").FogEnd = math.huge
            game:GetService("Lighting").FogStart = math.huge
            if game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere") then
                game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere"):Destroy()
            end
        end
        if ChamsEnabled then
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v ~= game:GetService("Players").LocalPlayer then
                    if v.Character and v.Character:FindFirstChild("Head") and
                        (v.Character.Head.Position - workspace.CurrentCamera.CFrame.Position).Magnitude < ChamsDist then
                        if ChamsTeamCheck then
                            if v.Team ~= game:GetService("Players").LocalPlayer.Team then
                                HighLight(v.Character)
                            end
                        else
                            HighLight(v.Character)
                        end
                    end
                end
            end
        end
        if ShowNames then
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v ~= game:GetService("Players").LocalPlayer then
                    if v.Character and v.Character:FindFirstChild("Head") then
                        ShowName(v.Character)
                    end
                end
            end
        end
        if SpeedEnabled then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = speedval
        end
        if JumpEnabled then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = jumpval
        end

        local Dist = math.huge
        local ChosenPlayer = nil
        local Magnitude2
        for _, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v ~=
                game:GetService("Players").LocalPlayer then
                local PlayerPos = v.Character.HumanoidRootPart.Position
                local MyPos = workspace.CurrentCamera.CFrame.Position
                local Magnitude = (PlayerPos - MyPos).Magnitude
                if Magnitude < Dist then
                    Dist = Magnitude
                    ChosenPlayer = v
                    Magnitude2 = Magnitude
                end
            end
        end
        if ChosenPlayer then
            Text.Text = "closest: " .. ChosenPlayer.Name .. " [" .. tostring(math.floor(Magnitude2)) .. "]"
        else
            Text.Text = ""
        end

        if FreeCam or Flying then
            local FlySpd = 1 + FlySpeed
            CurrentCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
            local lv = workspace.CurrentCamera.CFrame.LookVector
            local rv = workspace.CurrentCamera.CFrame.RightVector
            local uv = workspace.CurrentCamera.CFrame.UpVector

            if W then
                CurrentCF.CFrame = CurrentCF.CFrame + (lv * FlySpd) + uv / 10
            end
            if A then
                CurrentCF.CFrame = CurrentCF.CFrame - (rv * FlySpd)
            end
            if S then
                CurrentCF.CFrame = CurrentCF.CFrame - (lv * FlySpd) + uv / 10
            end
            if D then
                CurrentCF.CFrame = CurrentCF.CFrame + (rv * FlySpd)
            end
        end
        UnivColors = ChosenColor
        Img.ImageColor3 = ChosenColor
        Text.TextColor3 = ChosenColor
        if AimEnabled then
            if not LockedTarget then
                local function GetClosestPlayerToMouse()
                    local mouse = game:GetService("Players").LocalPlayer:GetMouse()
                    local dist = math.huge
                    for _, v in pairs(game:GetService("Players"):GetChildren()) do
                        if v:IsA("Player") and v ~= game:GetService("Players").LocalPlayer and v.Character and
                            v.Character:FindFirstChildOfClass("Humanoid") and
                            v.Character:FindFirstChildOfClass("Humanoid").Health > 0 then

                            local char = v.Character
                            local Hum = char:FindFirstChild("HumanoidRootPart")
                            if not Hum then
                                return
                            end

                            local posv3 = workspace.CurrentCamera:WorldToViewportPoint(Hum.Position)
                            local screenpos = UDim2.fromOffset(posv3.X, posv3.Y)
                            if posv3.Z > 0.5 and posv3.Z < MaxDistance3D then
                                local calculated = GetUDim2Dist(screenpos, UDim2.fromOffset(mouse.X, mouse.Y))
                                if calculated < dist then
                                    LockedTarget = v
                                    dist = calculated
                                end
                            end
                        end
                    end
                    if LockedTarget and dist < MaxDistanceOnScreen then
                        return LockedTarget
                    end
                    return nil
                end
                local locked = GetClosestPlayerToMouse()
                if locked then
                    locked.Character.Humanoid.Died:Connect(function()
                        locked = nil
                        return
                    end)
                    local cam = workspace.CurrentCamera
                    if SmoothAim then
                        cam.CFrame = cam.CFrame:Lerp(CFrame.new(cam.CFrame.Position, locked.Character["Head"].Position),
                            smoothness)
                    else
                        cam.CFrame = CFrame.new(cam.CFrame.Position, locked.Character["Head"].Position)
                    end
                end
            elseif LockedTarget then
                -- check choosen dudes distance to not accidently lock him when he dies, and not change mid lock
                local mouse = game:GetService("Players").LocalPlayer:GetMouse()
                if LockedTarget.Character then
                    local humm = LockedTarget.Character:FindFirstChildOfClass("Humanoid")
                    if humm and humm.health > 0 then
                        local char = LockedTarget.Character
                        local Hum = char:FindFirstChild(LockPart)
                        if not Hum then
                            LockedTarget = nil
                            return
                        end

                        local posv3 = workspace.CurrentCamera:WorldToViewportPoint(Hum.Position)
                        local screenpos = UDim2.fromOffset(posv3.X, posv3.Y)
                        if posv3.Z > 0.5 then
                            local calculated = GetUDim2Dist(screenpos, UDim2.fromOffset(mouse.X, mouse.Y))
                            if calculated > MaxDistanceOnScreen then
                                LockedTarget = nil
                            else
                                local cam = workspace.CurrentCamera
                                if SmoothAim then
                                    cam.CFrame = cam.CFrame:Lerp(
                                        CFrame.new(cam.CFrame.Position, LockedTarget.Character[LockPart].Position),
                                        smoothness)
                                else
                                    cam.CFrame = CFrame.new(cam.CFrame.Position,
                                        LockedTarget.Character[LockPart].Position)
                                end
                            end
                        else
                            LockedTarget = nil
                        end
                    else
                        LockedTarget = nil
                    end
                else
                    LockedTarget = nil
                end
            end
        else
            LockedTarget = nil
        end
    end)
end)
